load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("@rules_cc//cc:cc_library.bzl", "cc_library")
load("@rules_nasm//nasm:defs.bzl", "nasm_library")

BIT_DEPTH = 10

X265_BUILD = 215

write_file(
    name = "x265_config_h",
    out = "source/x265_config.h",
    content = ["""\
#ifndef X265_CONFIG_H
#define X265_CONFIG_H

/* Defines generated at build time */

/* Incremented each time public API is changed, X265_BUILD is used as
 * the shared library SONAME on platforms which support it. It also
 * prevents linking against a different version of the static lib */
#define X265_BUILD {}

#endif
""".format(X265_BUILD)],
    newline = "unix",
)

DEFINES = [
    "-DBIT_DEPTH={}".format(BIT_DEPTH),
    "-DEXPORT_C_API=1",
    "-DHAVE_STRTOK_R=1",
    "-DHAVE_ALIGNED_STACK=1",
    "-DHIGH_BIT_DEPTH=1",
    "-DX265_DEPTH=10",
    "-DX265_NS=x265",
    "-DX265_VERSION=136",
] + select({
    "@platforms//os:macos": [
        "-DMACOS=1",
        "-DPREFIX",
    ],
    "//conditions:default": [],
}) + select({
    "@platforms//cpu:arm": [
        "-DX265_ARCH_ARM=1",
        "-DHAVE_ARMV6=1",
    ],
    "@platforms//cpu:x86_64": [
        "-DX86_64=1",
        "-DARCH_X86_64=1",
        "-DX265_ARCH_X86=1",
    ],
    "//conditions:default": [],
})

CC_COPTS = DEFINES + [
    "-w",
    "-std=c++14",
    "-D__STDC_LIMIT_MACROS=1",
    "-DENABLE_ASSEMBLY=1",
]

cc_library(
    name = "x265",
    srcs = glob([
        "source/common/*.cpp",
        "source/encoder/*.cpp",
    ]) + select({
        "@platforms//cpu:x86_64": [":asm"] + glob([
            "source/common/vec/*.cpp",
            "source/common/x86/*.cpp",
        ]),
        "@platforms//cpu:aarch64": glob(
            include = [
                "source/common/aarch64/*.cpp",
            ],
            exclude = [
                "source/common/aarch64/sao-prim-sve.cpp",
                "source/common/aarch64/dct-prim-sve.cpp",
                "source/common/aarch64/intrapred-prim.cpp",
                "source/common/aarch64/sao-prim-sve2.cpp",
                "source/common/aarch64/filter-neon-dotprod.cpp",
            ],
        ),
        "//conditions:default": [],
    }),
    hdrs = [
        "source/x265.h",
    ],
    copts = CC_COPTS,
    includes = [
        "source",
        "source/common",
        "source/encoder",
    ],
    linkstatic = 1,
    textual_hdrs = [
        ":source/x265_config.h",
    ] + glob([
        "source/input/*.h",
        "source/output/*.h",
        "source/encoder/*.h",
        "source/common/*.h",
        "source/*.h",
    ]) + select({
        "@platforms//cpu:x86_64": glob([
            "source/common/x86/*.h",
        ]),
        "@platforms//cpu:aarch64": glob([
            "source/common/aarch64/*.h",
        ]),
        "//conditions:default": [],
    }),
    visibility = ["//visibility:public"],
)

cc_library(
    name = "x265_isystem",
    includes = ["source"],
    visibility = ["//visibility:public"],
    deps = [":x265"],
)

nasm_library(
    name = "asm",
    srcs = glob(
        include = [
            "source/common/x86/*.asm",
        ],
        exclude = [
            "source/common/x86/intrapred8.asm",
            "source/common/x86/intrapred8_allangs.asm",
            "source/common/x86/ipfilter8.asm",
            "source/common/x86/pixel-32.asm",
            "source/common/x86/sad-a.asm",
        ],
    ),
    copts = DEFINES + ["-DPIC"],
    tags = ["manual"],
)
